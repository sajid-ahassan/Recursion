#include <bits/stdc++.h>
using namespace std;

#define all(x) (x).begin(), (x).end()
#define allr(x) (x).rbegin(), (x).rend()
#define gsize(x) (int)((x).size())
#define int long long
#define fr(y, x) for (int y = 0; y < x; y++)
// #define endl '\n'
#define optimize()                \
    ios_base::sync_with_stdio(0); \
    cin.tie(0);                   \
    cout.tie(0);
bool comparePairs(const pair<int, int> &a, const pair<int, int> &b)
{
    if (a.first != b.first)
        return a.first > b.first;
    return a.second < b.second;
}
int mod = 1e6 + 9;

void solve()
{
}
void marge(int s, int e, vector<int> &arr)
{
    vector<int> temp;
    int mid = (s + e) / 2;
    int i = s, j = mid + 1;
    while (i <= mid && j <= e)
    {

        if (arr[i] > arr[j])
        {
            temp.push_back(arr[j]);
            j++;
        }
        else
        {
            temp.push_back(arr[i]);
            i++;
        }
    }
    while (i <= mid)
    {
        temp.push_back(arr[i]);
        i++;
    }
    while (j <= e)
    {
        temp.push_back(arr[j]);
        j++;
    }
    for (int i = 0; i < gsize(temp); i++)
        arr[i + s] = temp[i];
}
void srt(int s, int e, vector<int> &arr)
{
    if (s == e)
        return;
    int mid = (s + e) / 2;
    srt(s, mid, arr);
    srt(mid + 1, e, arr);
    marge(s, e, arr);
}
signed main()
{
    optimize();
    int n;
    cin >> n;
    vector<int> arr(n);
    for (int i = 0; i < n; i++)
    {
        cin >> arr[i];
    }
    srt(0, n - 1, arr);
    for (auto it : arr)
        cout << it << ' ';
    cout << endl;

    return 0;
}
